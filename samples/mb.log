{"level":"info","message":"[mb:2525] mountebank v1.10.0 now taking orders - point your browser to http://localhost:2525 for help","timestamp":"2017-07-24T02:52:21.336Z"}
{"level":"debug","message":"[mb:2525] config: {\"options\":{\"allowInjection\":true,\"loglevel\":\"debug\",\"mock\":true,\"port\":2525,\"noParse\":false,\"pidfile\":\"mb.pid\",\"nologfile\":false,\"logfile\":\"mb.log\",\"localOnly\":false,\"ipWhitelist\":[\"*\"],\"debug\":false,\"heroku\":false},\"process\":{\"nodeVersion\":\"v6.9.5\",\"architecture\":\"x64\",\"platform\":\"darwin\"}}","timestamp":"2017-07-24T02:52:21.338Z"}
{"level":"warn","message":"[mb:2525] Running with --allowInjection set. See http://localhost:2525/docs/security for security info","timestamp":"2017-07-24T02:52:21.338Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T02:52:41.487Z"}
{"level":"debug","message":"[mb:2525] ::1:54653 => {\"name\":\"decorate sample\",\"port\":4545,\"protocol\":\"http\",\"stubs\":[{\"predicates\":[{\"equals\":{\"method\":\"GET\",\"path\":\"/customers/123\"}}],\"responses\":[{\"_behaviors\":{\"decorate\":\"function (request, response) { var pad = function (number) { return (number < 10) ? '0' + number : number.toString(); }, now = new Date(), time = pad(now.getHours()) + ':' + pad(now.getMinutes()) + ':' + pad(now.getSeconds()); response.body = response.body.replace('${TIME}', time); }\"},\"is\":{\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\", \\\"lastUpdateTime\\\":\\\"${TIME}\\\"}\",\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"statusCode\":200}}]}]}","timestamp":"2017-07-24T02:52:41.506Z"}
{"level":"info","message":"[http:4545 decorate sample] Open for business...","timestamp":"2017-07-24T02:52:41.511Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T02:52:42.481Z"}
{"level":"debug","message":"[mb:2525] ::1:54653 => {\"name\":\"decorate sample\",\"port\":4545,\"protocol\":\"http\",\"stubs\":[{\"predicates\":[{\"equals\":{\"method\":\"GET\",\"path\":\"/customers/123\"}}],\"responses\":[{\"_behaviors\":{\"decorate\":\"function (request, response) { var pad = function (number) { return (number < 10) ? '0' + number : number.toString(); }, now = new Date(), time = pad(now.getHours()) + ':' + pad(now.getMinutes()) + ':' + pad(now.getSeconds()); response.body = response.body.replace('${TIME}', time); }\"},\"is\":{\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\", \\\"lastUpdateTime\\\":\\\"${TIME}\\\"}\",\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"statusCode\":200}}]}]}","timestamp":"2017-07-24T02:52:42.482Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T02:52:42.487Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 ESTABLISHED","timestamp":"2017-07-24T02:52:45.201Z"}
{"level":"info","message":"[http:4545 decorate sample] ::1:54654 => GET /customers/123","timestamp":"2017-07-24T02:52:45.201Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 => {\"requestFrom\":\"::1:54654\",\"method\":\"GET\",\"path\":\"/customers/123\",\"query\":{},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"ece5fa2e-7972-67f1-015d-d3197c084d71\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T02:52:45.205Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 using predicate match: [{\"equals\":{\"method\":\"GET\",\"path\":\"/customers/123\"}}]","timestamp":"2017-07-24T02:52:45.205Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 generating response from {\"_behaviors\":{\"decorate\":\"function (request, response) { var pad = function (number) { return (number < 10) ? '0' + number : number.toString(); }, now = new Date(), time = pad(now.getHours()) + ':' + pad(now.getMinutes()) + ':' + pad(now.getSeconds()); response.body = response.body.replace('${TIME}', time); }\"},\"is\":{\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\", \\\"lastUpdateTime\\\":\\\"${TIME}\\\"}\",\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"statusCode\":200}}","timestamp":"2017-07-24T02:52:45.206Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 using stub response behavior {\"decorate\":\"function (request, response) { var pad = function (number) { return (number < 10) ? '0' + number : number.toString(); }, now = new Date(), time = pad(now.getHours()) + ':' + pad(now.getMinutes()) + ':' + pad(now.getSeconds()); response.body = response.body.replace('${TIME}', time); }\"}","timestamp":"2017-07-24T02:52:45.206Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 <= {\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\",\"Connection\":\"close\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\", \\\"lastUpdateTime\\\":\\\"10:52:45\\\"}\",\"_mode\":\"text\"}","timestamp":"2017-07-24T02:52:45.208Z"}
{"level":"debug","message":"[http:4545 decorate sample] ::1:54654 CLOSED","timestamp":"2017-07-24T02:52:45.210Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:23:29.621Z"}
{"level":"info","message":"[http:4545 decorate sample] Ciao for now","timestamp":"2017-07-24T03:23:29.623Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:23:29.873Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:23:30.063Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:23:30.281Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:23:57.117Z"}
{"level":"debug","message":"[mb:2525] ::1:55183 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:23:57.119Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:23:57.122Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:23:59.416Z"}
{"level":"debug","message":"[mb:2525] ::1:55183 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:23:59.423Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:23:59.425Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55305 ESTABLISHED","timestamp":"2017-07-24T03:25:19.135Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55305 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:25:19.136Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55305 => {\"requestFrom\":\"::1:55305\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"e23538b2-7805-a203-de37-3b15f3308cda\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:25:19.137Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55305 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:25:19.138Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55305     source: \"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:25:19.138Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55305     scope: {\"requestFrom\":\"::1:55305\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"e23538b2-7805-a203-de37-3b15f3308cda\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:25:19.138Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55305     imposterState: {}","timestamp":"2017-07-24T03:25:19.138Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55305 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:25:19.139Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55305 CLOSED","timestamp":"2017-07-24T03:27:19.148Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55438 ESTABLISHED","timestamp":"2017-07-24T03:34:48.626Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55438 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:34:48.627Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55438 => {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"1724aa59-a044-cbff-fed6-4d7fb825ff4c\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:34:48.628Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:34:48.628Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     source: \"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:34:48.628Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     scope: {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"1724aa59-a044-cbff-fed6-4d7fb825ff4c\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:34:48.629Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     imposterState: {}","timestamp":"2017-07-24T03:34:48.629Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:34:48.629Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55438 => GET /customers/?id=MTIz","timestamp":"2017-07-24T03:35:46.458Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55438 => {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers/\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"28e2ab6d-62cf-75fd-e0ef-141a5b203fcf\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:35:46.458Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:35:46.458Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     source: \"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:35:46.458Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     scope: {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers/\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"28e2ab6d-62cf-75fd-e0ef-141a5b203fcf\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:35:46.458Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     imposterState: {}","timestamp":"2017-07-24T03:35:46.459Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:35:46.459Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55438 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:35:49.802Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55438 => {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"7fd56c35-9a02-4be2-6e71-5dc4ac7d28d1\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:35:49.803Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:35:49.804Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     source: \"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:35:49.804Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     scope: {\"requestFrom\":\"::1:55438\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"7fd56c35-9a02-4be2-6e71-5dc4ac7d28d1\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:35:49.804Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438     imposterState: {}","timestamp":"2017-07-24T03:35:49.804Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55438 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function (request, logger) {var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:35:49.804Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:37:40.583Z"}
{"level":"info","message":"[http:4545 Inject sample] Ciao for now","timestamp":"2017-07-24T03:37:40.584Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55438 CLOSED","timestamp":"2017-07-24T03:37:40.586Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:37:41.123Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:37:41.380Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:37:44.456Z"}
{"level":"debug","message":"[mb:2525] ::1:55475 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:37:44.457Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:37:44.459Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:37:44.975Z"}
{"level":"debug","message":"[mb:2525] ::1:55475 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:37:44.977Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:37:44.980Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55477 ESTABLISHED","timestamp":"2017-07-24T03:37:51.418Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55477 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:37:51.418Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55477 => {\"requestFrom\":\"::1:55477\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"698f9bfe-15a3-fdcf-ce31-355959772e81\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:37:51.418Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55477 undefined","timestamp":"2017-07-24T03:37:51.419Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55477 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:37:51.419Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55477     source: \"(function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:37:51.419Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55477     scope: {\"requestFrom\":\"::1:55477\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"698f9bfe-15a3-fdcf-ce31-355959772e81\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:37:51.419Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55477     imposterState: {}","timestamp":"2017-07-24T03:37:51.419Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55477 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:37:51.420Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55477 CLOSED","timestamp":"2017-07-24T03:39:51.421Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55555 ESTABLISHED","timestamp":"2017-07-24T03:43:00.300Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55555 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:43:00.301Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55555 => {\"requestFrom\":\"::1:55555\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"048c8a32-bb91-2ad3-071f-c864b9affd62\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:43:00.301Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55555 undefined","timestamp":"2017-07-24T03:43:00.301Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55555 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:43:00.302Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55555     source: \"(function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:43:00.302Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55555     scope: {\"requestFrom\":\"::1:55555\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"048c8a32-bb91-2ad3-071f-c864b9affd62\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:43:00.302Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55555     imposterState: {}","timestamp":"2017-07-24T03:43:00.302Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55555 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function(request, logger) {var url = require('url'); logger.info(request.url); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:43:00.303Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:43:55.544Z"}
{"level":"info","message":"[http:4545 Inject sample] Ciao for now","timestamp":"2017-07-24T03:43:55.545Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55555 CLOSED","timestamp":"2017-07-24T03:43:55.546Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:43:55.925Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:43:56.586Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:44:02.457Z"}
{"level":"debug","message":"[mb:2525] ::1:55566 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {logger.info('Inject sample ======== ', request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:44:02.458Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:44:02.459Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:44:02.845Z"}
{"level":"debug","message":"[mb:2525] ::1:55566 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {logger.info('Inject sample ======== ', request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:44:02.846Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:44:02.848Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:44:03.345Z"}
{"level":"debug","message":"[mb:2525] ::1:55566 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {logger.info('Inject sample ======== ', request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:44:03.346Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:44:03.348Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55568 ESTABLISHED","timestamp":"2017-07-24T03:44:08.420Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55568 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:44:08.420Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55568 => {\"requestFrom\":\"::1:55568\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"d84f416f-dbd4-5120-ed32-38db17dfe493\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:44:08.420Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55568 Inject sample ======== ","timestamp":"2017-07-24T03:44:08.421Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55568 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:44:08.421Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55568     source: \"(function(request, logger) {logger.info('Inject sample ======== ', request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:44:08.421Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55568     scope: {\"requestFrom\":\"::1:55568\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"d84f416f-dbd4-5120-ed32-38db17dfe493\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:44:08.421Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55568     imposterState: {}","timestamp":"2017-07-24T03:44:08.421Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55568 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function(request, logger) {logger.info('Inject sample ======== ', request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:44:08.422Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:45:30.780Z"}
{"level":"info","message":"[http:4545 Inject sample] Ciao for now","timestamp":"2017-07-24T03:45:30.781Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55568 CLOSED","timestamp":"2017-07-24T03:45:30.781Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:45:31.068Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:45:33.971Z"}
{"level":"debug","message":"[mb:2525] ::1:55566 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {logger.info('Inject sample ======== ', request, request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:45:33.972Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:45:33.973Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:45:34.308Z"}
{"level":"debug","message":"[mb:2525] ::1:55566 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {logger.info('Inject sample ======== ', request, request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:45:34.311Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:45:34.312Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55593 ESTABLISHED","timestamp":"2017-07-24T03:45:37.185Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55593 => GET /customers?id=MTIz","timestamp":"2017-07-24T03:45:37.185Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55593 => {\"requestFrom\":\"::1:55593\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"d20e6a65-6cc0-08b1-5ac8-3dc8a2ccce1f\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:45:37.186Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55593 Inject sample ========  { requestFrom: '::1:55593',\n  method: 'GET',\n  path: '/customers',\n  query: { id: 'MTIz' },\n  headers: \n   { Host: 'localhost:4545',\n     Connection: 'keep-alive',\n     'Cache-Control': 'no-cache',\n     'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36',\n     'Postman-Token': 'd20e6a65-6cc0-08b1-5ac8-3dc8a2ccce1f',\n     Accept: '*/*',\n     'Accept-Encoding': 'gzip, deflate, br',\n     'Accept-Language': 'en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2' },\n  body: '' }","timestamp":"2017-07-24T03:45:37.189Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55593 injection X=> TypeError: Parameter \"url\" must be a string, not undefined","timestamp":"2017-07-24T03:45:37.189Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55593     source: \"(function(request, logger) {logger.info('Inject sample ======== ', request, request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\"","timestamp":"2017-07-24T03:45:37.189Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55593     scope: {\"requestFrom\":\"::1:55593\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"d20e6a65-6cc0-08b1-5ac8-3dc8a2ccce1f\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:45:37.189Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55593     imposterState: {}","timestamp":"2017-07-24T03:45:37.189Z"}
{"level":"error","message":"[http:4545 Inject sample] ::1:55593 X=> {\"code\":\"invalid injection\",\"message\":\"invalid predicate injection\",\"source\":\"(function(request, logger) {logger.info('Inject sample ======== ', request, request.url); var url = require('url'); var query = url.parse(request.url, true).query; var origBuffer = Buffer(query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId })(scope, logger, imposterState);\",\"data\":\"Parameter \\\"url\\\" must be a string, not undefined\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.InjectionError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Object.inject (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:271:22)\\n    at Object.evaluate (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/predicates.js:305:39)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:40:35\\n    at Array.map (native)\\n    at trueForAll (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:26:21)\\n    at /Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/stubRepository.js:39:20\\n    at Array.filter (native)\"}","timestamp":"2017-07-24T03:45:37.190Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55593 CLOSED","timestamp":"2017-07-24T03:47:37.194Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:50:20.762Z"}
{"level":"info","message":"[http:4545 Inject sample] Ciao for now","timestamp":"2017-07-24T03:50:20.763Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:50:21.151Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:50:26.727Z"}
{"level":"debug","message":"[mb:2525] ::1:55639 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {var origBuffer = Buffer(request.query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:50:26.728Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:50:26.729Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:50:27.077Z"}
{"level":"debug","message":"[mb:2525] ::1:55639 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}],\"predicates\":[{\"inject\":\"function(request, logger) {var origBuffer = Buffer(request.query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]}]}","timestamp":"2017-07-24T03:50:27.078Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:50:27.083Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 ESTABLISHED","timestamp":"2017-07-24T03:50:34.210Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55646 => POST /customers?id=MTIz","timestamp":"2017-07-24T03:50:34.211Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 => {\"requestFrom\":\"::1:55646\",\"method\":\"POST\",\"path\":\"/customers\",\"query\":{\"id\":\"MTIz\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Content-Length\":\"0\",\"Cache-Control\":\"no-cache\",\"Origin\":\"chrome-extension://fhbjgbiflinjbdggehcddcbncdddomop\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"092d7cff-a22f-58a3-f7cf-30f201abb447\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T03:50:34.211Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 using predicate match: [{\"inject\":\"function(request, logger) {var origBuffer = Buffer(request.query.id, 'base64'); var decodedId = origBuffer.toString(); return '123' === decodedId }\"}]","timestamp":"2017-07-24T03:50:34.213Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 generating response from {\"is\":{\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\"}}","timestamp":"2017-07-24T03:50:34.213Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 <= {\"statusCode\":200,\"headers\":{\"content-type\":\"application/json;charset=UTF-8\",\"Connection\":\"close\"},\"body\":\"{\\\"id\\\": 123,\\\"name\\\":\\\"王一\\\",\\\"dob\\\": \\\"1998-08-08\\\"}\",\"_mode\":\"text\"}","timestamp":"2017-07-24T03:50:34.215Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55646 CLOSED","timestamp":"2017-07-24T03:50:34.216Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:59:39.992Z"}
{"level":"info","message":"[http:4545 Inject sample] Ciao for now","timestamp":"2017-07-24T03:59:39.992Z"}
{"level":"info","message":"[mb:2525] DELETE /imposters","timestamp":"2017-07-24T03:59:40.370Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:59:43.211Z"}
{"level":"debug","message":"[mb:2525] ::1:55757 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"inject\":\"function (request, state, logger) {var requestMessage = request.query.message; var responseStr = 'Hello! ' + requestMessage; return {statusCode: 200, headers: {'Content-Type': 'application/xml'}, body: responseStr}; }\"}]}]}","timestamp":"2017-07-24T03:59:43.212Z"}
{"level":"info","message":"[http:4545 Inject sample] Open for business...","timestamp":"2017-07-24T03:59:43.214Z"}
{"level":"info","message":"[mb:2525] POST /imposters","timestamp":"2017-07-24T03:59:43.627Z"}
{"level":"debug","message":"[mb:2525] ::1:55757 => {\"port\":4545,\"protocol\":\"http\",\"name\":\"Inject sample\",\"stubs\":[{\"responses\":[{\"inject\":\"function (request, state, logger) {var requestMessage = request.query.message; var responseStr = 'Hello! ' + requestMessage; return {statusCode: 200, headers: {'Content-Type': 'application/xml'}, body: responseStr}; }\"}]}]}","timestamp":"2017-07-24T03:59:43.627Z"}
{"level":"warn","message":"[mb:2525] error creating imposter: {\"code\":\"resource conflict\",\"message\":\"The port is already in use\",\"name\":\"Error\",\"stack\":\"Error\\n    at Object.from (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/inherit.js:15:17)\\n    at createError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:10:26)\\n    at Object.ResourceConflictError (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/util/errors.js:25:16)\\n    at Domain.errorHandler (/Users/xjzhou/.nvm/versions/node/v6.9.5/lib/node_modules/mountebank/src/models/imposter.js:16:36)\\n    at emitOne (events.js:96:13)\\n    at Domain.emit (events.js:188:7)\\n    at Server.emit (events.js:158:14)\\n    at emitErrorNT (net.js:1278:8)\\n    at _combinedTickCallback (internal/process/next_tick.js:74:11)\\n    at process._tickDomainCallback (internal/process/next_tick.js:122:9)\"}","timestamp":"2017-07-24T03:59:43.629Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 ESTABLISHED","timestamp":"2017-07-24T04:00:38.153Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55773 => GET /customers?message=my%20name%20is%20xunjie","timestamp":"2017-07-24T04:00:38.154Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 => {\"requestFrom\":\"::1:55773\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"message\":\"my name is xunjie\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"e8dabf93-16a1-9948-4906-8e4125eef807\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T04:00:38.154Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 using predicate match: {}","timestamp":"2017-07-24T04:00:38.154Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 generating response from {\"inject\":\"function (request, state, logger) {var requestMessage = request.query.message; var responseStr = 'Hello! ' + requestMessage; return {statusCode: 200, headers: {'Content-Type': 'application/xml'}, body: responseStr}; }\"}","timestamp":"2017-07-24T04:00:38.155Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/xml\",\"Connection\":\"close\"},\"body\":\"Hello! my name is xunjie\",\"_mode\":\"text\"}","timestamp":"2017-07-24T04:00:38.155Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55773 CLOSED","timestamp":"2017-07-24T04:00:38.156Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 ESTABLISHED","timestamp":"2017-07-24T04:00:44.270Z"}
{"level":"info","message":"[http:4545 Inject sample] ::1:55774 => GET /customers?message=My%20name%20is%20xunjie!","timestamp":"2017-07-24T04:00:44.271Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 => {\"requestFrom\":\"::1:55774\",\"method\":\"GET\",\"path\":\"/customers\",\"query\":{\"message\":\"My name is xunjie!\"},\"headers\":{\"Host\":\"localhost:4545\",\"Connection\":\"keep-alive\",\"Cache-Control\":\"no-cache\",\"User-Agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\",\"Postman-Token\":\"cae1c742-99af-bf4a-5603-a382f15514ad\",\"Accept\":\"*/*\",\"Accept-Encoding\":\"gzip, deflate, br\",\"Accept-Language\":\"en,en-US;q=0.8,en-GB;q=0.6,zh-CN;q=0.4,zh;q=0.2,zh-TW;q=0.2,de;q=0.2,ja;q=0.2\"},\"body\":\"\"}","timestamp":"2017-07-24T04:00:44.271Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 using predicate match: {}","timestamp":"2017-07-24T04:00:44.271Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 generating response from {\"inject\":\"function (request, state, logger) {var requestMessage = request.query.message; var responseStr = 'Hello! ' + requestMessage; return {statusCode: 200, headers: {'Content-Type': 'application/xml'}, body: responseStr}; }\"}","timestamp":"2017-07-24T04:00:44.271Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 <= {\"statusCode\":200,\"headers\":{\"Content-Type\":\"application/xml\",\"Connection\":\"close\"},\"body\":\"Hello! My name is xunjie!\",\"_mode\":\"text\"}","timestamp":"2017-07-24T04:00:44.273Z"}
{"level":"debug","message":"[http:4545 Inject sample] ::1:55774 CLOSED","timestamp":"2017-07-24T04:00:44.273Z"}
